<?xml version="1.1" ?>
<!--
  ~ Copyright (c) 2023.
  ~
  ~ This file is part of xmlutil.
  ~
  ~ This file is licenced to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You should have received a copy of the license with the source distribution.
  ~ Alternatively, you may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<xsd:schema xmlns:ts="http://www.w3.org/XML/2004/xml-schema-test-suite/"
            targetNamespace="http://pdvrieze.github.io/xmlutil/testoverride"
            xmlns:ov="http://pdvrieze.github.io/xmlutil/testoverride"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            attributeFormDefault="unqualified"
            elementFormDefault="qualified">
  <xsd:import namespace="http://www.w3.org/XML/2004/xml-schema-test-suite/" schemaLocation="xsts/common/xsts.xsd"/>

  <xsd:complexType name="test">
    <xsd:sequence maxOccurs="unbounded">
      <xsd:element ref="ov:expected"/>
    </xsd:sequence>
    <xsd:attribute name="path" use="required" type="xsd:string"/>
    <xsd:attribute name="isInstance" use="optional" type="xsd:boolean" default="false"/>
  </xsd:complexType>

  <xsd:simpleType name="regex">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>

  <xsd:complexType name="expected">
    <xsd:attribute name="validity" use="required" type="ts:expected-outcome"/>
    <xsd:attribute name="version" use="optional" type="ts:version-info"/>
    <xsd:attribute name="exception" use="optional" type="ov:regex"/>
    <xsd:attribute name="message" use="optional" type="ov:regex"/>
    <xsd:attribute name="annotation" use="optional" type="xsd:string"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>

  <xsd:element name="expected" type="ov:expected"/>

  <xsd:element name="overrides">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="ignore" type="xsd:string"/>

        <xsd:element name="test" type="ov:test"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
